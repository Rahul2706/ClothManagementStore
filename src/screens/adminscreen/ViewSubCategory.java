/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screens.adminscreen;

import Operations.CommonOperations;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.To.CategoryInfoTO;
import model.To.SubCategoryTO;
import model.dao.CategoryInfoDAO;
import model.dao.SubCategoryDAO;

public class ViewSubCategory extends javax.swing.JInternalFrame {

    List<SubCategoryTO> subcategory;
    private JPopupMenu popup;
    private int subcategory_id;

    public ViewSubCategory() {

        initComponents();
        bindTableDetails();
        preparePopupMenu();
        subcategory_id = 0;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableSubCategory = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("View SubCategory");

        tableSubCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableSubCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSubCategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSubCategory);

        btnRefresh.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        btnRefresh.setText("Refresh Details");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void preparePopupMenu() {
        popup = new JPopupMenu();
        JMenuItem delete_item = new JMenuItem("Delete This Record");
        JMenuItem edit_item = new JMenuItem("Edit This Record");
        try {
            ImageIcon icon = new ImageIcon(getClass().getResource("/photos/edits.png"));
            edit_item.setIcon(icon);
        } catch (Exception ex) {
        }
        try {
            ImageIcon icon = new ImageIcon(getClass().getResource("/photos/Delete.png"));
            delete_item.setIcon(icon);
        } catch (Exception ex) {
        }

        popup.add(delete_item);
        popup.add(edit_item);
        delete_item.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                delete_record();
            }
        });
        edit_item.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                edit_record();
            }
        });
    }

    public void delete_record() {
        if (subcategory_id != 0 && subcategory != null) {
            int result = JOptionPane.showConfirmDialog(this, "Are You Sure To Removed This Record?", "Message From Admin", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                SubCategoryDAO action = new SubCategoryDAO();
                String message = "";
                if (action.deleteRecord(subcategory_id)) {
                    message = "Record is Removed From System Database";
                    bindTableDetails();
                } else {
                    message = "Deletion Failure Due To : " + action.getError_message();

                }
                JOptionPane.showMessageDialog(this, message);
            }

        }
        subcategory_id = 0;
    }

    public void edit_record() {
        if (subcategory_id != -1 && subcategory != null) {
            CommonOperations.showInternalFrame(getDesktopPane(), new AddSubCategory(subcategory_id));
            dispose();
        }

    }

    public void bindTableDetails() {
        subcategory = new SubCategoryDAO().getAllRecord();
        String[] col_name = {"SubCategory Id ","SubCategory Name ", "Category Id"};
        Object[][] records = null;
        if (subcategory != null && subcategory.size() > 0) {
            records = new Object[subcategory.size()][col_name.length];
            int index = 0;
            for (SubCategoryTO sct : subcategory) {
                records[index] = new Object[]{sct.getSubcategoryid(),sct.getSubcategoryname(), sct.getCategoryid()};
                index++;
            }
        } else {
            records = new Object[1][col_name.length];
            records[0] = new Object[]{"No Record","No Record"};
        }
        DefaultTableModel model
                = new DefaultTableModel(records, col_name) {

                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };
        tableSubCategory.getTableHeader().setReorderingAllowed(false);
        tableSubCategory.setAutoCreateRowSorter(true);
        tableSubCategory.setModel(model);
    }


    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        bindTableDetails();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tableSubCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSubCategoryMouseClicked
        if(SwingUtilities.isRightMouseButton(evt)){
            int row_point = tableSubCategory.rowAtPoint(evt.getPoint());
            tableSubCategory.getSelectionModel().setSelectionInterval(row_point,row_point);
            popup.show(tableSubCategory, evt.getX() , evt.getY());
            int row = tableSubCategory.getSelectedRow();
            subcategory_id = Integer.parseInt(tableSubCategory.getValueAt(row, 0).toString());
        }    
        /*
            if (evt.getButton() == MouseEvent.BUTTON3) {
            System.out.println("Right Clicked");
             int row_point = tableSubCategory.rowAtPoint(evt.getPoint());
             tableSubCategory.getSelectionModel().setSelectionInterval(row_point, row_point);
             popup.show(tableSubCategory, evt.getX(), evt.getY());
             System.out.println(tableCategory.getSelectedRow());
             subcategory_id = tableSubCategory.getSelectedRow();
        */
            

    

    }//GEN-LAST:event_tableSubCategoryMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableSubCategory;
    // End of variables declaration//GEN-END:variables
}
