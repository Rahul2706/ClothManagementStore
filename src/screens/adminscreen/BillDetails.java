/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screens.adminscreen;

import Operations.ErrorHandler;
import Operations.Validations;
import java.util.ArrayList;
import java.util.Formatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.To.BillDetailsTO;
import model.To.BillInfoTO;
import model.To.CategoryInfoTO;
import model.To.ClothInfoTO;
import model.To.ClothStockTO;
import model.To.CustomerInfoTO;
import model.To.SubCategoryTO;
import model.dao.BillDetailsDAO;
import model.dao.BillInfoDAO;
import model.dao.CategoryInfoDAO;
import model.dao.ClothInfoDAO;
import model.dao.CommonDAO;
import model.dao.CustomerInfoDAO;
import model.dao.SubCategoryDAO;

/**
 *
 * @author Rahul khurana
 */
public class BillDetails extends javax.swing.JInternalFrame {

    /**
     * Creates new form BillDetailss
     */
    List<ClothInfoTO> purchase;
    List<ClothInfoTO> products;
    private String username;

    public BillDetails(String username) {
        this();
        this.username = username;
    }

    public BillDetails() {
        initComponents();

        jcbCategory.removeAllItems();
        jcbCategory.addItem("Choose Category Id");

        List<CategoryInfoTO> category = new CategoryInfoDAO().getAllRecord();
        if (category != null && category.size() > 0) {
            for (CategoryInfoTO cit : category) {
                jcbCategory.addItem(cit);
            }
        }

        jcbSubCategory.removeAllItems();
        jcbSubCategory.addItem("Choose SubCategoryId");

        jcbCloth.removeAllItems();
        jcbCloth.addItem("Choose Cloth Id");

        jcbLogin.removeAllItems();
        jcbLogin.addItem("Choose Customer Details");
        List<CustomerInfoTO> customer = new CustomerInfoDAO().getAllRecord();
        if (customer != null && customer.size() > 0) {
            for (CustomerInfoTO cit : customer) {
                jcbLogin.addItem(cit);
            }

        }

        bindTableDetails();
    }

    public void bindTableDetails() {
        String[] col_name = {" Cloth Id ", " Price ", " Qty "};

        Object[][] records = null;
        if (purchase != null && purchase.size() > 0) {
            double gtotal = 0;
            records = new Object[purchase.size()][col_name.length];
            int index = 0;
            for (ClothInfoTO cst : purchase) {
                double total = cst.getQty() * cst.getPrice();
                gtotal += total;

                records[index] = new Object[]{cst.getClothid(), cst.getQty(), cst.getPrice()};
                index++;

            }

            Formatter fmt = new Formatter();
            fmt.format("GrandTotal : Rs.%.2f", gtotal);
            lblGrand.setText(fmt.toString());
        } else {

            records = new Object[1][col_name.length];
            records[0] = new Object[]{"No Record", "No Record", "No Record"};

        }
        DefaultTableModel model = new DefaultTableModel(records, col_name) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tableCloth.getTableHeader().setReorderingAllowed(false);
        tableCloth.setAutoCreateRowSorter(true);
        tableCloth.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        btnbill = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        lblGrand = new javax.swing.JLabel();
        jtfQty = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jcbCategory = new javax.swing.JComboBox();
        jcbLogin = new javax.swing.JComboBox();
        jcbCloth = new javax.swing.JComboBox();
        jcbSubCategory = new javax.swing.JComboBox();
        jrbNewCustomer = new javax.swing.JRadioButton();
        jrbOldCustomer = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCloth = new javax.swing.JTable();
        jtfName = new javax.swing.JTextField();
        jtfAddress = new javax.swing.JTextField();
        jtfContact = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Bill Details");

        btnbill.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        btnbill.setText("BILL");
        btnbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbillActionPerformed(evt);
            }
        });

        btnsave.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        btnsave.setText("Btn SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        jtfQty.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N

        jcbCategory.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jcbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoryActionPerformed(evt);
            }
        });

        jcbLogin.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jcbLogin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbLoginActionPerformed(evt);
            }
        });

        jcbCloth.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jcbCloth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbCloth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbClothActionPerformed(evt);
            }
        });

        jcbSubCategory.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jcbSubCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbSubCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSubCategoryActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrbNewCustomer);
        jrbNewCustomer.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jrbNewCustomer.setText("New Customer");
        jrbNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNewCustomerActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrbOldCustomer);
        jrbOldCustomer.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jrbOldCustomer.setText("Old Customer");
        jrbOldCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbOldCustomerActionPerformed(evt);
            }
        });

        tableCloth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableCloth);

        jtfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNameActionPerformed(evt);
            }
        });

        jtfAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAddressActionPerformed(evt);
            }
        });

        jtfContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfContactActionPerformed(evt);
            }
        });
        jtfContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfContactKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setText("Contact No. :-");

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel2.setText("Name :-");

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel3.setText("Address:-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnsave)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbSubCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jcbCloth, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbOldCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbNewCustomer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(189, 189, 189)
                                        .addComponent(lblGrand, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnbill, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtfContact, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jtfQty, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcbSubCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcbCloth, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jcbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfContact, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jrbNewCustomer)
                        .addGap(18, 18, 18)
                        .addComponent(jrbOldCustomer)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfQty, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addComponent(lblGrand, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnsave)
                            .addComponent(btnbill, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 41, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbillActionPerformed
        String message = "";
        String name = jtfName.getText().trim();
        String address = jtfAddress.getText().trim();
        String contact = jtfContact.getText().trim();
        boolean allvalid = true;
        if (jrbNewCustomer.isSelected()) {
            if (Validations.isEmpty(name)) {
                message += "Please  Choose Customer Name\n";

            }
            if (Validations.isEmpty(address)) {
                message += "Please Choose Customer Addresss \n";

            }
            if (Validations.isEmpty(contact)) {
                message += "Please Choose Customer Conatct Details \n";

            } else if (jrbOldCustomer.isSelected()) {
                if (jcbLogin.getSelectedIndex() == 0) {
                    allvalid = false;
                    message += "Please Choose Customer Id \n";

                } else {
                    allvalid = false;
                    message += "Please Select any Customer Information ";
                }
                if (purchase == null || purchase.size() == 0) {
                    allvalid = false;
                    message += "Customer Does not purchase any thing .So Purchase \n";
                }
                if (allvalid) {
                    if (jrbNewCustomer.isSelected()) {
                        CustomerInfoTO record = new CustomerInfoTO();
                        record.setCustomername(name);
                        record.setContactno(contact);
                        record.setAddress(address);

                        CustomerInfoDAO action = new CustomerInfoDAO();

                        if (action.insertRecord(record)) {
                            message = "Category Information is saved in Systems";

                            int customerid = new CommonDAO().getLastInsertId();
                            if (customerid != 0) {
                                try {
                                    BillInfoTO bit = new BillInfoTO();
                                    bit.setBilldate(null);
                                    bit.setUsername(username);
                                    bit.setCustomerid(customerid);
                                    new BillInfoDAO().insertRecord(bit);
                                } catch (Exception ex) {
                                    ErrorHandler.showStacktrace(ex);
                                }

                                int billid = new CommonDAO().getLastInsertId();
                                if (billid != 0) {

                                    try {
                                        if (purchase != null && purchase.size() > 0) {
                                            for (ClothInfoTO cit : purchase) {
                                                BillDetailsTO bi = new BillDetailsTO();
                                                bi.setBillid(billid);
                                                bi.setClothid(cit.getClothid());
                                                bi.setPrice(cit.getPrice());
                                                bi.setQty(cit.getQty());

                                                new BillDetailsDAO().insertRecord(bi);

                                            }
                                        }
                                    } catch (Exception ex) {
                                        ErrorHandler.showStacktrace(ex);
                                    }
                                }
                            }
                        } else {
                            if (message.contains("Primary")) {
                                message = "Category Id is Already available in the system Database .So Try With Diff. Name";

                            } else {
                                message = "Insertion Failure due to:" + action.getError_message();
                            }
                        }

                    }

                } else if (jrbOldCustomer.isSelected()) {
                    BillInfoTO record = new BillInfoTO();

                    CustomerInfoTO ct = (CustomerInfoTO) jcbLogin.getSelectedItem();
                    record.setCustomerid(ct.getCustomerid());
                    ct.setCustomername(name);
                    ct.setContactno(contact);
                    ct.setAddress(address);

                    CustomerInfoDAO action = new CustomerInfoDAO();

                    if (action.insertRecord(ct)) {
                        message = "category Information is Saved in System";
                    } else {
                        if (message.contains("Primary")) {
                            message = "category Id is Already available in the system Database .So Try With Diff. Name";

                        } else {
                            message = "Insertion Failure due to:" + action.getError_message();

                        }
                    }
                }

            }
            JOptionPane.showMessageDialog(this, message);
        }

    }//GEN-LAST:event_btnbillActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try {
            if (jcbCloth.getSelectedIndex() > 0) {
                int qty = Integer.parseInt(jtfQty.getText().trim());
                ClothInfoTO cit = (ClothInfoTO) jcbCloth.getSelectedItem();
                if (qty > 0) {
                    ClothInfoTO newproduct = new ClothInfoTO();
                    newproduct.setClothid(cit.getClothid());
                    newproduct.setPrice(cit.getPrice());
                    newproduct.setQty(qty);
                    if (purchase == null) {
                        purchase = new ArrayList<>();
                    }
                    purchase.add(newproduct);

                    bindTableDetails();
                }
            }

        } catch (NumberFormatException ex) {

        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void jcbSubCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSubCategoryActionPerformed
        jcbCloth.removeAllItems();
        jcbCloth.addItem("Choose Cloth Id");

        if (jcbCategory.getSelectedIndex() > 0 && jcbSubCategory.getSelectedIndex() > 0) {
            SubCategoryTO sct = (SubCategoryTO) jcbSubCategory.getSelectedItem();
            List<ClothInfoTO> subs = new ClothInfoDAO().getAllRecord(sct.getSubcategoryid());
            if (subs != null) {
                for (ClothInfoTO cit : subs) {
                    jcbCloth.addItem(cit);
                }
            }
        }
    }//GEN-LAST:event_jcbSubCategoryActionPerformed

    private void jcbClothActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbClothActionPerformed

    }//GEN-LAST:event_jcbClothActionPerformed

    private void jcbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoryActionPerformed
        jcbSubCategory.removeAllItems();
        jcbSubCategory.addItem("Choose SubCategory Id");

        if (jcbCategory.getSelectedIndex() > 0) {
            CategoryInfoTO cit = (CategoryInfoTO) jcbCategory.getSelectedItem();
            List<SubCategoryTO> subs = new SubCategoryDAO().getAllRecord(cit.getCategoryid());
            if (subs != null) {
                for (SubCategoryTO sct : subs) {
                    jcbSubCategory.addItem(sct);
                }
            }

        }


    }//GEN-LAST:event_jcbCategoryActionPerformed

    private void jtfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNameActionPerformed

    private void jtfAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAddressActionPerformed

    private void jtfContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfContactActionPerformed

    private void jcbLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbLoginActionPerformed

    private void jtfContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfContactKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfContactKeyTyped

    private void jrbNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNewCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbNewCustomerActionPerformed

    private void jrbOldCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbOldCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbOldCustomerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbill;
    private javax.swing.JButton btnsave;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox jcbCategory;
    private javax.swing.JComboBox jcbCloth;
    private javax.swing.JComboBox jcbLogin;
    private javax.swing.JComboBox jcbSubCategory;
    private javax.swing.JRadioButton jrbNewCustomer;
    private javax.swing.JRadioButton jrbOldCustomer;
    private javax.swing.JTextField jtfAddress;
    private javax.swing.JTextField jtfContact;
    private javax.swing.JTextField jtfName;
    private javax.swing.JLabel jtfQty;
    private javax.swing.JLabel lblGrand;
    private javax.swing.JTable tableCloth;
    // End of variables declaration//GEN-END:variables
}
